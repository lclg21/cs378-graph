==22541== Memcheck, a memory error detector
==22541== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==22541== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==22541== Command: ./TestGraph
==22541== 
Running main() from gtest_main.cc
[==========] Running 82 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 41 tests from TestGraph/0, where TypeParam = boost::adjacency_list<boost::setS, boost::vecS, boost::directedS, boost::no_property, boost::no_property, boost::no_property, boost::listS>
[ RUN      ] TestGraph/0.add_edge_1
[       OK ] TestGraph/0.add_edge_1 (97 ms)
[ RUN      ] TestGraph/0.add_edge_2
[       OK ] TestGraph/0.add_edge_2 (15 ms)
[ RUN      ] TestGraph/0.add_edge_3
[       OK ] TestGraph/0.add_edge_3 (10 ms)
[ RUN      ] TestGraph/0.add_vertex_1
[       OK ] TestGraph/0.add_vertex_1 (6 ms)
[ RUN      ] TestGraph/0.add_vertex_2
[       OK ] TestGraph/0.add_vertex_2 (12 ms)
[ RUN      ] TestGraph/0.add_vertex_3
[       OK ] TestGraph/0.add_vertex_3 (8 ms)
[ RUN      ] TestGraph/0.adjacent_vertices_1
[       OK ] TestGraph/0.adjacent_vertices_1 (27 ms)
[ RUN      ] TestGraph/0.adjacent_vertices_2
[       OK ] TestGraph/0.adjacent_vertices_2 (12 ms)
[ RUN      ] TestGraph/0.adjacent_vertices_3
[       OK ] TestGraph/0.adjacent_vertices_3 (4 ms)
[ RUN      ] TestGraph/0.edge_1
[       OK ] TestGraph/0.edge_1 (14 ms)
[ RUN      ] TestGraph/0.edge_2
[       OK ] TestGraph/0.edge_2 (8 ms)
[ RUN      ] TestGraph/0.edge_3
[       OK ] TestGraph/0.edge_3 (5 ms)
[ RUN      ] TestGraph/0.edges_1
[       OK ] TestGraph/0.edges_1 (34 ms)
[ RUN      ] TestGraph/0.edges_2
[       OK ] TestGraph/0.edges_2 (4 ms)
[ RUN      ] TestGraph/0.edges_3
[       OK ] TestGraph/0.edges_3 (9 ms)
[ RUN      ] TestGraph/0.num_edges_1
[       OK ] TestGraph/0.num_edges_1 (15 ms)
[ RUN      ] TestGraph/0.num_edges_2
[       OK ] TestGraph/0.num_edges_2 (4 ms)
[ RUN      ] TestGraph/0.num_edges_3
[       OK ] TestGraph/0.num_edges_3 (5 ms)
[ RUN      ] TestGraph/0.num_vertices_1
[       OK ] TestGraph/0.num_vertices_1 (4 ms)
[ RUN      ] TestGraph/0.num_vertices_2
[       OK ] TestGraph/0.num_vertices_2 (4 ms)
[ RUN      ] TestGraph/0.num_vertices_3
[       OK ] TestGraph/0.num_vertices_3 (4 ms)
[ RUN      ] TestGraph/0.num_vertices_4
[       OK ] TestGraph/0.num_vertices_4 (4 ms)
[ RUN      ] TestGraph/0.source_1
[       OK ] TestGraph/0.source_1 (4 ms)
[ RUN      ] TestGraph/0.source_2
[       OK ] TestGraph/0.source_2 (5 ms)
[ RUN      ] TestGraph/0.source_3
[       OK ] TestGraph/0.source_3 (7 ms)
[ RUN      ] TestGraph/0.target_1
[       OK ] TestGraph/0.target_1 (4 ms)
[ RUN      ] TestGraph/0.target_2
[       OK ] TestGraph/0.target_2 (4 ms)
[ RUN      ] TestGraph/0.target_3
[       OK ] TestGraph/0.target_3 (7 ms)
[ RUN      ] TestGraph/0.vertex_1
[       OK ] TestGraph/0.vertex_1 (4 ms)
[ RUN      ] TestGraph/0.vertex_2
[       OK ] TestGraph/0.vertex_2 (4 ms)
[ RUN      ] TestGraph/0.vertex_3
[       OK ] TestGraph/0.vertex_3 (7 ms)
[ RUN      ] TestGraph/0.vertices_1
[       OK ] TestGraph/0.vertices_1 (5 ms)
[ RUN      ] TestGraph/0.vertices_2
[       OK ] TestGraph/0.vertices_2 (4 ms)
[ RUN      ] TestGraph/0.vertices_3
[       OK ] TestGraph/0.vertices_3 (5 ms)
[ RUN      ] TestGraph/0.constructor_1
[       OK ] TestGraph/0.constructor_1 (3 ms)
[ RUN      ] TestGraph/0.constructor_2
[       OK ] TestGraph/0.constructor_2 (4 ms)
[ RUN      ] TestGraph/0.test_vertex
[       OK ] TestGraph/0.test_vertex (5 ms)
[ RUN      ] TestGraph/0.test_edge
[       OK ] TestGraph/0.test_edge (13 ms)
[ RUN      ] TestGraph/0.test_vertices
[       OK ] TestGraph/0.test_vertices (7 ms)
[ RUN      ] TestGraph/0.test_edges
[       OK ] TestGraph/0.test_edges (16 ms)
[ RUN      ] TestGraph/0.test_adjacent_vertices
[       OK ] TestGraph/0.test_adjacent_vertices (11 ms)
[----------] 41 tests from TestGraph/0 (448 ms total)

[----------] 41 tests from TestGraph/1, where TypeParam = Graph
[ RUN      ] TestGraph/1.add_edge_1
TestGraph.c++:77: Failure
Value of: p.second
  Actual: false
Expected: true
[  FAILED  ] TestGraph/1.add_edge_1, where TypeParam = Graph (84 ms)
[ RUN      ] TestGraph/1.add_edge_2
[       OK ] TestGraph/1.add_edge_2 (8 ms)
[ RUN      ] TestGraph/1.add_edge_3
[       OK ] TestGraph/1.add_edge_3 (10 ms)
[ RUN      ] TestGraph/1.add_vertex_1
[       OK ] TestGraph/1.add_vertex_1 (40 ms)
[ RUN      ] TestGraph/1.add_vertex_2
[       OK ] TestGraph/1.add_vertex_2 (9 ms)
[ RUN      ] TestGraph/1.add_vertex_3
[       OK ] TestGraph/1.add_vertex_3 (9 ms)
[ RUN      ] TestGraph/1.adjacent_vertices_1
==22541== Invalid read of size 8
==22541==    at 0x407528: std::vector<int, std::allocator<int> >::begin() const (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x40663E: adjacent_vertices(int, Graph const&) (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x43621D: TestGraph_adjacent_vertices_1_Test<Graph>::TestBody() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x474A1C: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x46D3D6: testing::Test::Run() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x46D4AC: testing::TestInfo::Run() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x46D5F6: testing::TestCase::Run() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x46D886: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x47459C: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x46CA7A: testing::UnitTest::Run() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x404934: main (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==22541== 
==22541== 
==22541== Process terminating with default action of signal 11 (SIGSEGV)
==22541==  Access not within mapped region at address 0x0
==22541==    at 0x407528: std::vector<int, std::allocator<int> >::begin() const (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x40663E: adjacent_vertices(int, Graph const&) (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x43621D: TestGraph_adjacent_vertices_1_Test<Graph>::TestBody() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x474A1C: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x46D3D6: testing::Test::Run() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x46D4AC: testing::TestInfo::Run() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x46D5F6: testing::TestCase::Run() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x46D886: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x47459C: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x46CA7A: testing::UnitTest::Run() (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==    by 0x404934: main (in /v/filer4b/v38q001/ll9338/cs378/cs378-graph/TestGraph)
==22541==  If you believe this happened as a result of a stack
==22541==  overflow in your program's main thread (unlikely but
==22541==  possible), you can try to increase the size of the
==22541==  main thread stack using the --main-stacksize= flag.
==22541==  The main thread stack size used in this run was 16777216.
==22541== 
==22541== HEAP SUMMARY:
==22541==     in use at exit: 32,094 bytes in 537 blocks
==22541==   total heap usage: 3,025 allocs, 2,488 frees, 208,618 bytes allocated
==22541== 
==22541== LEAK SUMMARY:
==22541==    definitely lost: 0 bytes in 0 blocks
==22541==    indirectly lost: 0 bytes in 0 blocks
==22541==      possibly lost: 14,038 bytes in 248 blocks
==22541==    still reachable: 18,056 bytes in 289 blocks
==22541==         suppressed: 0 bytes in 0 blocks
==22541== Rerun with --leak-check=full to see details of leaked memory
==22541== 
==22541== For counts of detected and suppressed errors, rerun with: -v
==22541== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)
Segmentation fault (core dumped)
